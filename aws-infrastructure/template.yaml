AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AI Personal Finance - Receipt Processing Application

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev, staging, prod)
    AllowedValues: [dev, staging, prod]

Resources:
  # S3 Bucket for Receipt Storage
  ReceiptsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ai-personal-finance-receipts-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE]
            AllowedOrigins: ['*']
            MaxAge: 3000

  # DynamoDB Table for Transaction Data
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "ai-personal-finance-transactions-${Environment}"
      AttributeDefinitions:
        - AttributeName: transactionId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: transactionId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # Lambda Function for Receipt Processing
  ReceiptProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ai-personal-finance-receipt-processor-${Environment}"
      CodeUri: ../backend/
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref ReceiptsBucket
          DYNAMODB_TABLE_NAME: !Ref TransactionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionsTable
        - S3ReadPolicy:
            BucketName: !Ref ReceiptsBucket
        - TextractFullAccessPolicy: {}
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref ReceiptsBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
                  - Name: suffix
                    Value: .jpeg
                  - Name: suffix
                    Value: .png
                  - Name: suffix
                    Value: .heic

Outputs:
  ReceiptsBucketName:
    Description: Name of the S3 bucket for storing receipt images
    Value: !Ref ReceiptsBucket
    Export:
      Name: !Sub "${AWS::StackName}-ReceiptsBucket"
  
  TransactionsTableName:
    Description: Name of the DynamoDB table for storing transaction data
    Value: !Ref TransactionsTable
    Export:
      Name: !Sub "${AWS::StackName}-TransactionsTable"
  
  ReceiptProcessorFunctionName:
    Description: Name of the Lambda function for processing receipts
    Value: !Ref ReceiptProcessorFunction
    Export:
      Name: !Sub "${AWS::StackName}-ReceiptProcessorFunction"
  
  ReceiptProcessorFunctionArn:
    Description: ARN of the Lambda function for processing receipts
    Value: !GetAtt ReceiptProcessorFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ReceiptProcessorFunctionArn" 